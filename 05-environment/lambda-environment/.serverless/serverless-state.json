{
  "service": {
    "service": "lambda-environment",
    "serviceObject": {
      "name": "lambda-environment"
    },
    "provider": {
      "stage": "prod",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "environment": {
        "NODE_ENV": "prod",
        "APICommitMessagesURL": "http://whatthecommit.com/",
        "DbTableName": "CommitMessages-prod",
        "DbWriteCapacityUnits": 2,
        "DbReadCapacityUnits": 2
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem",
            "dynamodb:PutItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/CommitMessages-prod"
        }
      ],
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CommitDashmessageDashschedulerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/lambda-environment-prod-commit-message-scheduler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "lambda-environment-prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-environment-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-environment-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "lambda-environment-prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CommitDashmessageDashschedulerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/lambda-environment/prod/1585448091624-2020-03-29T02:14:51.624Z/lambda-environment.zip"
              },
              "FunctionName": "lambda-environment-prod-commit-message-scheduler",
              "Handler": "handler.scheduler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "NODE_ENV": "prod",
                  "APICommitMessagesURL": "http://whatthecommit.com/",
                  "DbTableName": "CommitMessages-prod",
                  "DbWriteCapacityUnits": 2,
                  "DbReadCapacityUnits": 2
                }
              }
            },
            "DependsOn": [
              "CommitDashmessageDashschedulerLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CommitDashmessageDashschedulerLambdaVersionOPO1ZpeiyqeOGEba8RErJDl5pdrdKDk9xMPCcmjFSY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CommitDashmessageDashschedulerLambdaFunction"
              },
              "CodeSha256": "wZnHBdPtV1y+HHn6P+Zfq31GajODEqZab0Cz3oJflv0="
            }
          },
          "CommitDashmessageDashschedulerEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(1 minute)",
              "State": "ENABLED",
              "Name": "schedule-commit-message-prod",
              "Description": "get commit messages each minute",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "CommitDashmessageDashschedulerLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "commit-message-schedulerSchedule"
                }
              ]
            }
          },
          "CommitDashmessageDashschedulerLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CommitDashmessageDashschedulerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CommitDashmessageDashschedulerEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "Table": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "CommitMessages-prod",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "commitMessage",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "commitMessage",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 2,
                "WriteCapacityUnits": 2
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "CommitDashmessageDashschedulerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CommitDashmessageDashschedulerLambdaVersionOPO1ZpeiyqeOGEba8RErJDl5pdrdKDk9xMPCcmjFSY"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "schedulerRate": "rate(1 minute)",
      "enabled": true,
      "tableName": "CommitMessages-prod",
      "dbWriteCapacityUnits": 2,
      "dbReadCapacityUnits": 2
    },
    "pluginsData": {},
    "functions": {
      "commit-message-scheduler": {
        "handler": "handler.scheduler",
        "events": [
          {
            "schedule": {
              "rate": "rate(1 minute)",
              "name": "schedule-commit-message-prod",
              "description": "get commit messages each minute",
              "enabled": true
            }
          }
        ],
        "name": "lambda-environment-prod-commit-message-scheduler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CommitDashmessageDashschedulerLambdaVersionOPO1ZpeiyqeOGEba8RErJDl5pdrdKDk9xMPCcmjFSY"
      }
    },
    "resources": {
      "Resources": {
        "Table": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "CommitMessages-prod",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "commitMessage",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "commitMessage",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 2,
              "WriteCapacityUnits": 2
            }
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/erickwendel/Desktop/estudos-serverless-aws/demo05-envs/lambda-environment/.serverless/lambda-environment.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/lambda-environment/prod/1585448091624-2020-03-29T02:14:51.624Z",
    "artifact": "lambda-environment.zip"
  }
}